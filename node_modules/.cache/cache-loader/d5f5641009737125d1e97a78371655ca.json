{"remainingRequest":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/node_modules/babel-loader/lib/index.js!/Users/anubz/Documents/Ativadores/offline1 - cópia 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anubz/Documents/Ativadores/offline1 - cópia 2/src/components/comps/Spinner.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/src/components/comps/Spinner.vue","mtime":1495159114000},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/.babelrc","mtime":1526042178021},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia 2/node_modules/vue-loader/lib/index.js","mtime":1525995699000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'spinner',\n\n  /**\n   * Props the parent can use to manipulate this component.\n   * Note: Components themselves should not mutate their own props.\n   */\n  props: {\n    /**\n     * The message displayed with the spinner\n     */\n    'message': {\n      type: String,\n      default: 'Loading...'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  methods: {}\n};",{"version":3,"sources":["Spinner.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA;QAEA;;AACA,AACA,AACA,AACA;;;;;AAEA,AACA,AACA;;;;YAEA;eACA,AACA,AACA;AAJA;AAJA;wBASA;WACA,AACA;AACA;WACA,AACA;AApBA","file":"Spinner.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n<div class=\"spinner-container\">\n  <div class=\"spinner-content\">\n    <svg class=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n    </svg>\n    <br>\n    <div class=\"spinner-message\">{{ message }}</div>\n  </div>\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'spinner',\n  /**\n   * Props the parent can use to manipulate this component.\n   * Note: Components themselves should not mutate their own props.\n   */\n  props: {\n    /**\n     * The message displayed with the spinner\n     */\n    'message': {\n      type: String,\n      default: 'Loading...'\n    }\n  },\n  data () {\n    return {\n    }\n  },\n  methods: {\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n$offset: 187;\n$duration: 1.4s;\n.spinner-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0; bottom: 0; left: 0; right: 0;\n  z-index: 999;\n  background-color: rgba(255,255,255, 0.7);\n}\n.spinner-content {\n  \n}\n.spinner-message {\n  padding: 1px 4px;\n  border-radius: 8px;\n  background-color: rgba(255,255,255, 0.85);\n}\n.spinner {\n  animation: rotator $duration linear infinite;\n  margin: auto;\n}\n@keyframes rotator {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(270deg); }\n}\n.path {\n  stroke-dasharray: $offset;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  animation:\n    dash $duration ease-in-out infinite, \n    colors ($duration*4) ease-in-out infinite;\n}\n@keyframes colors {\n  0% { stroke: #4285F4; }\n  25% { stroke: #DE3E35; }\n  50% { stroke: #F7C223; }\n  75% { stroke: #1B9A59; }\n  100% { stroke: #4285F4; }\n}\n@keyframes dash {\n 0% { stroke-dashoffset: $offset; }\n 50% {\n   stroke-dashoffset: $offset/4;\n   transform:rotate(135deg);\n }\n 100% {\n   stroke-dashoffset: $offset;\n   transform:rotate(450deg);\n }\n}\n</style>\n"]}]}