{"remainingRequest":"/Users/anubz/Documents/Ativadores/offline1 - cópia/node_modules/babel-loader/lib/index.js!/Users/anubz/Documents/Ativadores/offline1 - cópia/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/anubz/Documents/Ativadores/offline1 - cópia/src/components/VueQrReader.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia/src/components/VueQrReader.vue","mtime":1526655939902},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia/.babelrc","mtime":1526042178021},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Documents/Ativadores/offline1 - cópia/node_modules/vue-loader/lib/index.js","mtime":1525995699000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport jsQR from \"jsqr\";\nexport default {\n  name: \"vue-qr-reader\",\n  props: {\n    useBackCamera: {\n      type: Boolean,\n      default: true\n    },\n    stopOnScanned: {\n      type: Boolean,\n      default: true\n    },\n    drawOnFound: {\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      type: String,\n      default: \"#FF3B58\"\n    },\n    lineWidth: {\n      type: Number,\n      default: 2\n    },\n    videoWidth: {\n      type: Number,\n      default: 320\n    },\n    videoHeight: {\n      type: Number,\n      default: 240\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      showPlay: false,\n      containerWidth: null,\n      active: false\n    };\n  },\n  computed: {\n    videoWH: function videoWH() {\n      if (this.containerWidth) {\n        var width = this.containerWidth;\n        var height = width * 0.75;\n        return {\n          width: width,\n          height: height\n        };\n      }\n\n      return {\n        width: this.videoWidth,\n        height: this.videoHeight\n      };\n    }\n  },\n  methods: {\n    drawLine: function drawLine(begin, end) {\n      this.canvas.beginPath();\n      this.canvas.moveTo(begin.x, begin.y);\n      this.canvas.lineTo(end.x, end.y);\n      this.canvas.lineWidth = this.lineWidth;\n      this.canvas.strokeStyle = this.lineColor;\n      this.canvas.stroke();\n    },\n    drawBox: function drawBox(l) {\n      if (this.drawOnFound) {\n        this.drawLine(l.topLeftCorner, l.topRightCorner);\n        this.drawLine(l.topRightCorner, l.bottomRightCorner);\n        this.drawLine(l.bottomRightCorner, l.bottomLeftCorner);\n        this.drawLine(l.bottomLeftCorner, l.topLeftCorner);\n      }\n    },\n    tick: function tick() {\n      if (this.$refs.video && this.$refs.video.readyState === this.$refs.video.HAVE_ENOUGH_DATA) {\n        this.$refs.canvas.height = this.videoWH.height;\n        this.$refs.canvas.width = this.videoWH.width;\n        this.canvas.drawImage(this.$refs.video, 0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n        var imageData = this.canvas.getImageData(0, 0, this.$refs.canvas.width, this.$refs.canvas.height);\n        var code = false;\n\n        try {\n          code = jsQR(imageData.data, imageData.width, imageData.height);\n        } catch (e) {\n          // sometimes JSQR may fail, but we can carry on.\n          console.error(e);\n        }\n\n        if (code) {\n          this.drawBox(code.location);\n          this.found(code.data);\n        }\n      }\n\n      this.run();\n    },\n    setup: function setup() {\n      var _this = this;\n\n      if (this.responsive) {\n        this.$nextTick(function () {\n          _this.containerWidth = _this.$refs.container.clientWidth;\n        });\n      }\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        this.previousCode = null;\n        this.parity = 0;\n        this.active = true;\n        this.canvas = this.$refs.canvas.getContext(\"2d\");\n        var facingMode = this.useBackCamera ? {\n          exact: \"environment\"\n        } : \"user\";\n\n        var handleSuccess = function handleSuccess(stream) {\n          _this.$refs.video.srcObject = stream;\n\n          var playPromise = _this.$refs.video.play();\n\n          playPromise.catch(function () {\n            return _this.showPlay = true;\n          });\n          playPromise.then(_this.run);\n        };\n\n        navigator.mediaDevices.getUserMedia({\n          video: {\n            facingMode: facingMode\n          }\n        }).then(handleSuccess).catch(function () {\n          navigator.mediaDevices.getUserMedia({\n            video: true\n          }).then(handleSuccess);\n        });\n      }\n    },\n    run: function run() {\n      if (this.active) {\n        requestAnimationFrame(this.tick);\n      }\n    },\n    found: function found(code) {\n      if (this.previousCode !== code) {\n        this.previousCode = code;\n      } else if (this.previousCode === code) {\n        this.parity += 1;\n      }\n\n      if (this.parity > 2) {\n        this.active = this.stopOnScanned ? false : true;\n        this.parity = 0;\n        this.$emit(\"code-scanned\", code);\n      }\n    },\n    fullStop: function fullStop() {\n      if (this.$refs.video && this.$refs.video.srcObject) {\n        this.$refs.video.srcObject.getTracks().forEach(function (t) {\n          return t.stop();\n        });\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.setup();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.fullStop();\n  },\n  watch: {\n    active: {\n      immediate: true,\n      handler: function handler(active) {\n        if (!active) {\n          this.fullStop();\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["VueQrReader.vue"],"names":[],"mappings":";;;;;;;;AASA;AAEA;QAEA;;;YAGA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA;AAHA;;YAKA;eACA,AACA,AACA;AAJA;AA7BA;wBAkCA;;gBAEA;sBACA;cACA,AACA;AAJA;AAKA;;gCAEA;+BACA;yBACA;6BACA;;;AACA;;AACA;;;;qBACA;;AACA,AACA;AATA;;4CAWA;kBACA;wCACA;oCACA;mCACA;qCACA;kBACA;AACA;iCACA;4BACA;yCACA;0CACA;6CACA;4CACA;AACA;AACA;0BACA;AACA,qBACA,0DACA,kBACA;gDACA;+CACA;oBACA,qBACA,OACA,GACA,qBACA,yBACA,AACA;oCACA,aACA,GACA,qBACA,yBACA,AACA;mBACA;;YACA;iEACA;oBACA;AACA;wBACA;AACA;;kBACA;4BACA;0BACA;AACA;AACA;;WACA;AACA;;AACA;;2BACA;mCACA;uDACA;AACA;AACA;;yEACA;4BACA;sBACA;sBACA;mDACA;8BACA;iBACA;YACA;;2DACA;wCACA;;8CACA;;;oCACA;;iCACA;AACA;;kBACA;;AACA;;gBACA,iCACA;oBACA;mBACA;kBACA;AACA;AACA;AACA;wBACA;uBACA;mCACA;AACA;AACA;gCACA;sCACA;4BACA;6CACA;uBACA;AACA;;2BACA;mDACA;sBACA;mCACA;AACA;AACA;kCACA;0DACA;;mBACA;;AACA;AACA,AACA;AAvGA;8BAwGA;SACA;AACA;0CACA;SACA;AACA;;;iBAGA;wCACA;qBACA;eACA;AACA;AACA,AACA,AACA;AARA;AADA;AAnKA","file":"VueQrReader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\" ref=\"container\">\n    <video v-show=\"showPlay\" class=\"source\" ref=\"video\" :width=\"videoWH.width\" :height=\"videoWH.height\" controls></video>\n    <canvas v-show=\"!showPlay\" ref=\"canvas\"></canvas>\n    <button v-show=\"showPlay\" @click=\"run\">Play!</button>\n  </div>\n</template>\n\n<script>\nimport jsQR from \"jsqr\";\n\nexport default {\n  name: \"vue-qr-reader\",\n  props: {\n    useBackCamera: {\n      type: Boolean,\n      default: true\n    },\n    stopOnScanned: {\n      type: Boolean,\n      default: true\n    },\n    drawOnFound: {\n      type: Boolean,\n      default: true\n    },\n    lineColor: {\n      type: String,\n      default: \"#FF3B58\"\n    },\n    lineWidth: {\n      type: Number,\n      default: 2\n    },\n    videoWidth: {\n      type: Number,\n      default: 320\n    },\n    videoHeight: {\n      type: Number,\n      default: 240\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      showPlay: false,\n      containerWidth: null,\n      active: false\n    };\n  },\n  computed: {\n    videoWH() {\n      if (this.containerWidth) {\n        const width = this.containerWidth;\n        const height = width * 0.75;\n        return { width, height };\n      }\n      return { width: this.videoWidth, height: this.videoHeight };\n    }\n  },\n  methods: {\n    drawLine(begin, end) {\n      this.canvas.beginPath();\n      this.canvas.moveTo(begin.x, begin.y);\n      this.canvas.lineTo(end.x, end.y);\n      this.canvas.lineWidth = this.lineWidth;\n      this.canvas.strokeStyle = this.lineColor;\n      this.canvas.stroke();\n    },\n    drawBox(l) {\n      if (this.drawOnFound) {\n        this.drawLine(l.topLeftCorner, l.topRightCorner);\n        this.drawLine(l.topRightCorner, l.bottomRightCorner);\n        this.drawLine(l.bottomRightCorner, l.bottomLeftCorner);\n        this.drawLine(l.bottomLeftCorner, l.topLeftCorner);\n      }\n    },\n    tick() {\n      if (\n        this.$refs.video &&\n        this.$refs.video.readyState === this.$refs.video.HAVE_ENOUGH_DATA\n      ) {\n        this.$refs.canvas.height = this.videoWH.height;\n        this.$refs.canvas.width = this.videoWH.width;\n        this.canvas.drawImage(\n          this.$refs.video,\n          0,\n          0,\n          this.$refs.canvas.width,\n          this.$refs.canvas.height\n        );\n        const imageData = this.canvas.getImageData(\n          0,\n          0,\n          this.$refs.canvas.width,\n          this.$refs.canvas.height\n        );\n        let code = false;\n        try {\n          code = jsQR(imageData.data, imageData.width, imageData.height);\n        } catch (e) {\n          // sometimes JSQR may fail, but we can carry on.\n          console.error(e);\n        }\n        if (code) {\n          this.drawBox(code.location);\n          this.found(code.data);\n        }\n      }\n      this.run();\n    },\n    setup() {\n      if (this.responsive) {\n        this.$nextTick(() => {\n          this.containerWidth = this.$refs.container.clientWidth;\n        });\n      }\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        this.previousCode = null;\n        this.parity = 0;\n        this.active = true;\n        this.canvas = this.$refs.canvas.getContext(\"2d\");\n        const facingMode = this.useBackCamera\n          ? { exact: \"environment\" }\n          : \"user\";\n        const handleSuccess = stream => {\n          this.$refs.video.srcObject = stream;\n          const playPromise = this.$refs.video.play();\n          playPromise.catch(() => (this.showPlay = true));\n          playPromise.then(this.run);\n        };\n        navigator.mediaDevices\n          .getUserMedia({ video: { facingMode } })\n          .then(handleSuccess)\n          .catch(() => {\n            navigator.mediaDevices\n              .getUserMedia({ video: true })\n              .then(handleSuccess);\n          });\n      }\n    },\n    run() {\n      if (this.active) {\n        requestAnimationFrame(this.tick);\n      }\n    },\n    found(code) {\n      if (this.previousCode !== code) {\n        this.previousCode = code;\n      } else if (this.previousCode === code) {\n        this.parity += 1;\n      }\n      if (this.parity > 2) {\n        this.active = this.stopOnScanned ? false : true;\n        this.parity = 0;\n        this.$emit(\"code-scanned\", code);\n      }\n    },\n    fullStop() {\n      if (this.$refs.video && this.$refs.video.srcObject) {\n        this.$refs.video.srcObject.getTracks().forEach(t => t.stop())\n      }\n    }\n  },\n  mounted() {\n    this.setup();\n  },\n  beforeDestroy () {\n    this.fullStop();\n  },\n  watch: {\n    active: {\n      immediate: true,\n      handler(active) {\n          if (!active) {\n            this.fullStop();\n          }\n      }\n    }\n  }\n};\n</script>\n\n<style scope>\n.container {\n  width: 100%;\n  height: auto;\n}\n</style>\n"]}]}